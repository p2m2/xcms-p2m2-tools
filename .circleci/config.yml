# Scala CircleCI 2.0 configuration file
# See: https://circleci.com/docs/sample-config/
version: 2.1
orbs:
  node: circleci/node@5.1.0
workflows:
  compile-workflow:
    jobs:
      - build:
          context:
            - DOCKER_CONTEXT
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:19.0.2
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASS}

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - node/install:
          node-version: '19.6'
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: cat /dev/null | sbt test:compile

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}

      # run tests!
      - run:
          name: Compile/Tests
          command: |
            export NODE_OPTIONS=--openssl-legacy-provider
            cat /dev/null | sbt test:test
